func i32 @f(i32 %1, i32 %3) {
; entry = .B1
; exits = .B1
  ptr %2 = alloca 4, 4
  ptr %4 = alloca 4, 4
  ptr %5 = alloca 4, 4

.B1:
; preds =
; succs =
  store ptr %2, i32 %1
  store ptr %4, i32 %3
  i32 %6 = load ptr %2
  i32 %7 = load ptr %4
  i32 %8 = mul i32 %6, i32 %7
  store ptr %5, i32 %8
  i32 %9 = load ptr %2
  i32 %10 = load ptr %4
  i32 %11 = div i32 %9, i32 %10
  store ptr %5, i32 %11
  i32 %12 = load ptr %2
  i32 %13 = load ptr %4
  i32 %14 = mod i32 %12, i32 %13
  store ptr %5, i32 %14
  i32 %15 = load ptr %2
  i32 %16 = load ptr %4
  i32 %17 = add i32 %15, i32 %16
  store ptr %5, i32 %17
  i32 %18 = load ptr %2
  i32 %19 = load ptr %4
  i32 %20 = sub i32 %18, i32 %19
  store ptr %5, i32 %20
  i32 %21 = load ptr %2
  i32 %22 = load ptr %4
  i32 %23 = shl i32 %21, i32 %22
  store ptr %5, i32 %23
  i32 %24 = load ptr %2
  i32 %25 = load ptr %4
  i32 %26 = shr i32 %24, i32 %25
  store ptr %5, i32 %26
  i32 %27 = load ptr %5
  ret i32 %27
}
