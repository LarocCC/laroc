	.text
	.globl	f
	.p2align	1
	.type	f, @function
f:
# entry = .B1
# exits = .B1
# {%F2} = { size:4, align:4, offset:0 }
# {%F4} = { size:4, align:4, offset:0 }
# {%F5} = { size:4, align:4, offset:0 }
.f.B1:
# preds =
# liveIns =
# liveOuts =
# succs =
	nop	implicit def a0, implicit def a1
	mv	def a0, kill a0
	mv	def a1, kill a1
	sw	kill a0, def {%F2}
	sw	kill a1, def {%F4}
	lw	def a0, {%F2}
	lw	def a1, {%F4}
	add	def a0, kill a0, kill a1
	sw	kill a0, def dead {%F5}
	lw	def a0, kill {%F2}
	lw	def a1, kill {%F4}
	sub	def a0, kill a0, kill a1
	mv	def a0, kill a0
	ret	implicit kill a0

	.globl	g
	.p2align	1
	.type	g, @function
g:
# entry = .B1
# exits = .B1
.g.B1:
# preds =
# liveIns =
# liveOuts =
# succs =
	nop
	ret

	.globl	main
	.p2align	1
	.type	main, @function
main:
# entry = .B1
# exits = .B1
# {%F2} = { size:4, align:4, offset:0 }
.main.B1:
# preds =
# liveIns =
# liveOuts =
# succs =
	nop	implicit def a0
	mv	def a0, kill a0
	sw	kill a0, def {%F2}
	lw	def a0, kill {%F2}
	li	def a1, 1
	sub	def a0, kill a0, kill a1
	mv	def a0, kill a0
	ret	implicit kill a0

	.globl	h
	.p2align	1
	.type	h, @function
h:
# entry = .B1
# exits = .B3
# {%F1} = { size:4, align:4, offset:0 }
# {%F3} = { size:4, align:4, offset:0 }
.h.B1:
# preds =
# liveIns =
# liveOuts = {%F1}
# succs = .B2
	nop
	li	def a0, 1
	sw	kill a0, def {%F1}
	j	.B2
.h.B2:
# preds = .B1
# liveIns = {%F1}
# liveOuts = {%F1}
# succs = .B3
	li	def a0, 2
	sw	kill a0, def dead {%F3}
	j	.B3
.h.B3:
# preds = .B2
# liveIns = {%F1}
# liveOuts =
# succs =
	lw	def a0, kill {%F1}
	mv	def a0, kill a0
	ret	implicit kill a0
